# mmc/scsi etc
setenv devtype mmc
# The device number of the given type
setenv devnum 0
# The ubuntu-seed partition
setenv seedpart 1
# The ubuntu-boot partition
setenv bootpart 2
# Kernel image filename
setenv kernel_name kernel.img
# Ramdisk filename
setenv ramdisk_name initrd.img
# FDT filename
setenv fdt_name dtbs/armada-3720-espressobin.dtb
# Address to decompress the kernel image to.
setenv kernel_comp_addr_r 0x20000000

echo "Loading ubuntu-seed configuration..."
load ${devtype} ${devnum}:${seedpart} ${scriptaddr} uboot/ubuntu/boot.sel
env import ${scriptaddr}

echo "Snapd boot mode: ${snapd_recovery_mode}"

if test "${snapd_recovery_mode}" = "run"
then
    echo "Loading ubuntu-boot configuration..."
    load ${devtype} ${devnum}:${bootpart} ${scriptaddr} uboot/ubuntu/boot.sel
    env import ${scriptaddr}
    setenv kernel_bootpart "${bootpart}"
    if test "${snapd_recovery_mode}" = "try"
    then
        echo "Trying to boot with ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_try_kernel}/"
    else
        echo "Using ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_kernel}/"
    fi
else
    # Prefix within the seed partiion to the boot files
    setenv prefix "systems/${snapd_recovery_system}/kernel/"
    setenv kernel_bootpart "${seedpart}"
fi

setenv console "console=ttyMV0,115200 earlycon"
setenv bootargs "${console} rw snapd_recovery_mode=${snapd_recovery_mode} snapd_recovery_system=${snapd_recovery_system}"

# Load all files
echo "Loading ${prefix}${kernel_name}..."
load ${devtype} ${devnum}:${kernel_bootpart} ${kernel_addr_r} "${prefix}${kernel_name}"
# Maximum size of the decompressed kernel
setenv kernel_comp_size "${filesize}"

echo "Loading ${prefix}${fdt_name}..."
load ${devtype} ${devnum}:${kernel_bootpart} ${fdt_addr_r} "${prefix}${fdt_name}"

echo "Loading ${prefix}${ramdisk_name}..."
load ${devtype} ${devnum}:${kernel_bootpart} ${ramdisk_addr_r} "${prefix}${ramdisk_name}"
setenv ramdisk_size "${filesize}"

booti ${kernel_addr_r} ${ramdisk_addr_r}:${ramdisk_size} ${fdt_addr_r}
